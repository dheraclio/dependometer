<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE project SYSTEM "Configuration.dtd">

<project name="Encoding Test" ignorePhysicalStructure="false" maxPackageCycles="5000"  maxTypeCycles="5000" maxCompilationUnitCycles="5000" fileEncoding="UTF-8">
	<!-- DIRECTORIES -->

	<input dir="."/>
    <system-include-path dir="level1"/>
   
	<system-define symbol="VAL" macro="VALTECH"/>

	<!-- INPUT PACKAGE FILTER -->
	<!-- include-package name=".*"/--> <!-- Include packages matching the given pattern ... - regular expressions JDK 1.4 -->
	<include-package name=".*"/>

	<!--exclude-package name="default"/--> <!-- Exclude packages matching the given pattern ...  - regular expressions JDK 1.4 -->

	<!--
	Optional node for vertical slice analysis
		checkDependencies (default = "true" - the 'checkSubsystemDependencies' attribute must also be set to "true")
			"true"	all subsystem dependencies are 'cumulated' for the corresponding vertical slices the violations are shown
			"false" no visualization of 'cumulated' violations
		maxCycles (default = "0")
			as above
		exclude-subsystem
			specify which subsystems are not used for the vertical slice analysis (i.e. exclude the technical ones, normally
			technically motivated vertical division of all layers is rare)
	-->
	<!--
	<vertical-slices>
		<exclude-subsystem name="user-interface::.*"/>
		<exclude-subsystem name="application-general::.*"/>
	</vertical-slices>
	-->
	<!-- OUTPUT LISTENER -->
   	<listener class="com.valtech.source.dependometer.ui.console.output.HtmlWriter" args="./results"/>
   	<listener class="com.valtech.source.dependometer.ui.console.output.CsvWriter" args="./results/summary.csv"/>
   	<listener class="com.valtech.source.dependometer.ui.console.output.DetailedCsvWriter" args="./results/summary-detailed.csv"/>
   	<!-- configure the detail level via an additional argument: layer, subsystem, package, compilation-unit, type (default = compilation-unit) -->
	<listener class="com.valtech.source.dependometer.ui.console.output.ViolationReportCsvWriter" args="./results/violation-report.csv type"/>
   	<!-- configure the detail level via an additional argument: layer, subsystem, package, compilation-unit, type (default = package) -->
	<listener class="com.valtech.source.dependometer.ui.console.output.CycleParticipationReportCsvWriter" args="./results/cycle-participation-report.csv type"/>
	<listener class="com.valtech.source.dependometer.ui.console.output.TypeDependencyCsvWriter" args="./results/typedependencies.csv"/>

	<!-- ASSERTIONS -->
	<assertion pattern="assert"/> <!-- Look for these assertion statements - regular expressions JDK 1.4 -->

	<!-- IGNORE -->
	<!-- <ignore fromType=".*CycleTest.*" toType=".*CycleTest.*"/> --> <!-- Ignore matching type dependencies (Simulation) - regular expressions JDK 1.4 -->

	<!-- SKIP -->
	<skip prefix="System.[a-zA-Z]*"/> <!-- Ignore the dependencies to external types - regular expressions JDK 1.4 -->


	<!-- REFACTORINGS -->
	<!-- <refactor compilationUnit="com.valtech.source.dependometer.app.configprovider.filebased.xml.Refactoring" toPackage="com.valtech.source.dependometer.app.core.impl"/> --> <!-- Move compilation unit(s) to another package (Simulation) - n compilationUnits may be specified using the regular expressions from the JDK 1.4 -->
	<!-- <refactor compilationUnit=".*Event" toPackage="com.valtech.source.dependometer.app.core.events"/> -->

	<!-- THRESHOLDS -->
	<lower-threshold name="Project.NumberOfProjectInternalLayers" value="1"/> <!-- Need at least one defined layer -->
	<lower-threshold name="Project.NumberOfDefinedLayerDependencies" value="1"/>
	<lower-threshold name="Project.NumberOfProjectInternalSubsystems" value="1"/>
	<lower-threshold name="Project.NumberOfDefinedSubsystemDependencies" value="1"/>
	<lower-threshold name="Project.PercentageOfLayersWithRcNotLessThanOne" value="100"/>
	<!-- lower-threshold name="Project.PercentageOfVerticalSlicesWithRcNotLessThanOne" value="100"/-->
	<lower-threshold name="Project.PercentageOfSubsystemsWithRcNotLessThanOne" value="100"/>
	<lower-threshold name="Project.PercentageOfPackagesWithRcNotLessThanOne" value="70"/>
	<lower-threshold name="Project.NumberOfDefinedPackageDependencies" value="0"/>
	<lower-threshold name="Project.AverageNumberOfAssertionsPerProjectInternalClass" value="5"/>
	<lower-threshold name="Project.NumberOfProjectInternalTypes" value="1"/> <!-- At least one type was matched by the package filter and therefore analyzed -->
	<upper-threshold name="Project.NumberOfProjectExternalSubsystems" value="5"/>
	<upper-threshold name="Project.NumberOfProjectExternalLayers" value="1"/>
	<upper-threshold name="Project.NumberOfNotImplementedSubsystems" value="0"/> <!-- All subsystems must have at least 1 assigned package -->
	<upper-threshold name="Project.ACD" value="13.65"/>
	<!-- upper-threshold name="Project.VerticalSliceCyclesExist" value="0"/-->
	<upper-threshold name="Project.LayerCyclesExist" value="0"/>
	<upper-threshold name="Project.SubsystemCyclesExist" value="0"/>
	<upper-threshold name="Project.PackageCyclesExist" value="0"/>
	<upper-threshold name="Project.MaxDepthOfPackageHierarchy" value="7"/>
	<upper-threshold name="Project.NumberOfProjectExternalPackages" value="7"/>
	<upper-threshold name="Project.NumberOfNotAssignedPackages" value="0"/>
	<upper-threshold name="Project.NumberOfForbiddenEfferentPackageDependencies" value="0"/>
	<upper-threshold name="Project.CompilationUnitCyclesExist" value="0"/>
	<upper-threshold name="Project.TypeCyclesExist" value="0"/>
	<upper-threshold name="Project.MaxDepthOfInheritance" value="5"/>

	<!-- LOGICAL ARCHITECTURE -->
    <layer name="TestLayer">
		<description>test layer</description>
		<subsystem name="TestSubsystem">
			<description>test subsystem</description>
       		<include-package name=".*"/>
       	</subsystem>
	</layer>
</project>